BASE: https://developer.mozilla.org/pt-BR/docs/Learn/Server-side/Django

sistemaweb/         # Website folder
    manage.py       # Script to run Django tools for this project (created using django-admin)
    projetoapp/     # Website/project folder (created using django-admin)
	
	- sistema/ # modelos do sistema > # home page sistema
	- sys_usuario/ # modelo personalizando usuário padrão django
		python manage.py startapp sys_usuario
		- Criar modulo antes do migrate
		- python manage.py createsuperuser
		
	- sys_menu/ # menu do sistema
	- sys_modulo/ # 
	- sys_acessos/ # 
	
	- dashbord_atendimento/
	

- Pasta para armazenar os projetos
	cd D:\Python\django\sistemaweb

- Criando um projetoapp - o ponto depois do nome do projeto é ara criar o projeto na pasta atual e não criar outro pasta
	python -m django startproject projetoapp .
	
- Criando o aplicativo dos apps
	python manage.py startapp sistema
	python manage.py startapp sys_usuario
	
	python manage.py createsuperuser
	
	python manage.py startapp sys_menu
	python manage.py startapp sys_modulo
	python manage.py startapp sys_permissao
	
	
	
- Registrando o aplicativo de catálogo
	- Editar settings.py
	
		INSTALLED_APPS = [
			'django.contrib.admin',
			'django.contrib.auth',
			'django.contrib.contenttypes',
			'django.contrib.sessions',
			'django.contrib.messages',
			'django.contrib.staticfiles',
			
			'sys_usuario',  #my app
		]
	
	- A nova linha especifica o objeto de configuração do aplicativo (CatalogConfig) que foi gerado em /projetoapp/modulos/apps.py onde a aplicação foi criada.

- Especificando o Banco de Dados
	- Editar settings.py
		DATABASES = {
			'default': {
				'ENGINE': 'django.db.backends.sqlite3',
				'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
			}
		}
		ou padrão
		DATABASES = {
			'default': {
				'ENGINE': 'django.db.backends.sqlite3',
				'NAME': BASE_DIR / 'db.sqlite3',
			}
		}
		
- Outras configurações do projetoapp
	- Editar settings.py	
		
		TEMPLATES = 
			'DIRS': [os.path.join((BASE_DIR), 'templates/')],
		
		LANGUAGE_CODE = 'pt-br'
		TIME_ZONE = 'America/Sao_Paulo'
		
		#STATIC_ROOT - os.path.join(BASE_DIR,'staticfiles')
		STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
		

- Conectando o mapeador de URL para ativar os apps na url
	- Editar /projetoapp/urls.py
		from django.urls import include, path
		
		urlpatterns += [
			path('usuario/', include('sys_usuario.urls')), 
		] 
		
		urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
	
- Dentro da pasta dos novos apps, cd sys_usuario
	- Criar a pasta templates
	- Criar o arquivo urls.py
		from django.urls import path, include
		from sys_usuario import views
		
		urlpatterns = [
			path('', views.index, name="usuario"), # se não existir ocorre erro
		]
	- Criar o arquivo forms.py
		- se usar a class modelForm, será acoplado ao model
		- se usar a class form.Form, será desacoplado do model
	
- Testando o framework do site
	
	- Migrando Bancos de Dados
		python3 manage.py makemigrations
		python3 manage.py migrate
	
	- Testando o website - Roda o programa
		python3 manage.py runserver
	

- Caso erro no migrate se tabela ja existir ou foi renomeado aplicativo
	python manage.py migrate --fake <appname>
		
- Criando um super usuário

	python3 manage.py createsuperuser
	

- Definindo os modelos para app modelos
	- Editar /modelos/models.py
	
	- Definir nome da tabela no banco de dados na classe
		class Pessoa(models.Model):
   
			class Meta:
				db_table = 'pesssoa' # definir nome da tabela
	
	
- Definir nome app
	- Editar /modelos/apps.py
		
		class MPessoaConfig(AppConfig):
			default_auto_field = 'django.db.models.BigAutoField'
			name = 'mod_cad_gerais'
			verbose_name = "Cadastros Gerais"
		

- Registrando modelos para mostrar no admin padrão do django
	- Editar /projetoapp/modelos/admin.py
		
		from .models import Usuario

		admin.site.register(sys_usuario)
		

- Usar o Python shell, para executar comandos os models por exemplo
	python manage.py shell
	importar o modelo
	from app1.models import User
	
	- criar usuário
	user = User(nome='alencar',telefone=999999, email='alencar@gmail.com')
	user.save()
	user.id

	user = User(nome='teste',telefone=999999, email='teste@gmail.com')
	user.save()
	user.id

	- consultar usuários no ORM
	User.objects.all()
	
	
- PROXIMOS MODULOS A CRIAR		
		
	- Criar dashbord de estatisticas dos acesso, alterações e ultimas alterações
		- Mostrar na inicial tbm
	
	- Criar query insert inicial do funcionamentos dos modulos para migração ou deploy de projeto.

	- Criar app de captura de informações/indicadores no tasy para django/flask


	- chart js
		- 15 Best JavaScript Chart Libraries in 2022
			- https://www.atatus.com/blog/javascript-chart-libraries/
				- https://www.chartjs.org/docs/latest/
				- https://naver.github.io/billboard.js/demo/#Chart.AreaChart
				- https://apexcharts.com/javascript-chart-demos/
				- https://nvd3.org/examples/index.html
				- https://visjs.github.io/vis-timeline/examples/graph2d/
				- https://formidable.com/open-source/victory/gallery/

	- Layout adm pronto
		- Top 42 Free HTML5 Admin Dashboard Templates 2022
			- https://colorlib.com/wp/free-html5-admin-dashboard-templates/
		- The 23 Best HTML Dashboard Templates for Admins & Users
			- https://blog.hubspot.com/website/best-html5-admin-dashboard-templates
			
			
		- Muito recurso de chart e card
			https://themeforest.net/item/limitless-responsive-web-application-kit/13080328
			https://www.wrappixel.com/templates/adminpro/?ref=40
		- layout bonito 		https://preview.themeforest.net/item/vuexy-vuejs-html-laravel-admin-dashboard-template/full_screen_preview/23328599?_ga=2.141732786.1883632591.1656384616-914970199.1656384616&_gac=1.213125792.1656384624.EAIaIQobChMIseXGxpHP-AIVYuhcCh2ZQQH_EAAYASAAEgJDpfD_BwE
		


- pip freeze requirements.txt

- DEPLOY heroku - https://id.heroku.com/login
	- https://developer.mozilla.org/pt-BR/docs/Learn/Server-side/Django/Deployment#preparando_seu_site_para_publica%C3%A7%C3%A3o
		
	- D:\Python\django\sistemaweb>
		- heroku create
	
	 »   Warning: heroku update available from 7.53.0 to 7.60.2.
	Creating app... !
	 !    Invalid credentials provided.
	 »   Warning: heroku update available from 7.53.0 to 7.60.2.
	heroku: Press any key to open up the browser to login or q to exit:
	Opening browser to https://cli-auth.heroku.com/auth/cli/browser/5c7b04a7-8378-4ffa-8b23-dd743baa3e6f?requestor=SFMyNTY.g2gDbQAAAA0xOTEuMjUxLjEwLjk4bgYAQGxoK4IBYgABUYA.Hxl0R4VMFXKgxmPTMV5t8jQLlh2VucmMRSqyQ6LIYpc
	Logging in... done
	Logged in as alenkar.k@gmail.com
	Creating app... done, ⬢ pure-savannah-09394
	https://pure-savannah-09394.herokuapp.com/ | https://git.heroku.com/pure-savannah-09394.git
	
1 - disable the collectstatic during a deploy
heroku config:set DISABLE_COLLECTSTATIC=1

2 - deploy
git push heroku main

3 - run migrations (django 1.10 added at least one) - se usar banco de dados no servidor
heroku run python manage.py makemigrations
heroku run python manage.py migrate

4 - run collectstatic using bower
heroku run 'bower install --config.interactive=false;grunt prep;python manage.py collectstatic --noinput'

5 - enable collecstatic for future deploys - ARRUMA CSS DO ADMIN TAMBÉM
heroku config:unset DISABLE_COLLECTSTATIC 

6 - try it on your own (optional) - ARRUMA CSS DO ADMIN TAMBÉM
heroku run python manage.py collectstatic

7 - Se necessário criar usuário login
	- heroku run python manage.py createsuperuser

8 - DEPLOY a cada mudança
	- GIT DEPLOY
		git add -A
		git status
		git commit -m "commit"
		git push origin main
		
	- HEROKU DEPLOY
		git push heroku main
		
9 - Log heroku
	heroku logs --tail